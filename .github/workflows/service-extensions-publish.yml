name: Publish Service Extensions Callout images packages

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Docker image tag to use for the package (default to selected branch name)'
        required: false
      commit_sha:
        description: 'Commit SHA to checkout (default to latest commit on selected branch)'
        required: false
      set_as_latest:
        description: 'Set the tag as latest'
        required: false
        default: 'false'

permissions:
  contents: read
  packages: write

env:
  TAG_NAME: ${{ github.event.inputs.tag_name || github.ref_name }}
  COMMIT_SHA: ${{ github.event.inputs.commit_sha || github.sha }}
  PUSH_LATEST: ${{ github.event.inputs.set_as_latest || 'true' }}
  REGISTRY_IMAGE: ghcr.io/datadog/dd-trace-go/service-extensions-callout

jobs:
  build-service-extensions:
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'arm-4core-linux' }}
    strategy:
      matrix:
        platform: [ linux/amd64, linux/arm64 ]

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.COMMIT_SHA }}

      - name: Install Docker (only arm64)
        if: matrix.platform == 'linux/arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          newgrp docker
          sudo chmod 666 /var/run/docker.sock

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Docker
        shell: bash
        run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ./contrib/envoyproxy/go-control-plane/cmd/serviceextensions/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  publish-service-extensions:
    runs-on: ubuntu-latest
    needs:
      - build-service-extensions

    steps:
      - name: Download digests
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Docker
        shell: bash
        run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Create tags
        id: tags
        run: |
            tagname=${TAG_NAME//\//-} # remove slashes from tag name
            tags="tags=-t ghcr.io/datadog/dd-trace-go/service-extensions-callout:${tagname} \
            -t ghcr.io/datadog/dd-trace-go/service-extensions-callout:${{ env.COMMIT_SHA }}"
            if [ "${PUSH_LATEST}" == "true" ]; then
              tags="$tags -t ghcr.io/datadog/dd-trace-go/service-extensions-callout:latest"
            fi
          
            echo $tags >> $GITHUB_OUTPUT

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create ${{ steps.tags.outputs.tags }} \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
