name: Nightly govulncheck
on:
  push:
    branches:
      - 'shevchenko/govulncheck'
#on:
#  push:
#    branches:
#      - main
#  schedule:
#    - cron: '00 00 * * *'
jobs:
  govulncheck-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'DataDog/dd-trace-go'
      - name: Checkout Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Install govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck in ddtrace
        env:
          $CHECK_DIR: ./ddtrace/...
          run: .github/workflows/govulncheck.sh
#        run: |
#          govulncheck ./ddtrace/... >> ddtrace_results.txt
#          if [ $(cat ddtrace_results.txt | grep "Vulnerability #" | wc -l) -gt 0 ]; then
#            echo "Found ${num} vulnerabilities"
#            echo $(cat ddtrace_results.txt | grep "Vulnerability #")
#            exit 1
#          fi
#      - name: Run govulncheck in appsec
#        if: always()
#        run: |
#          govulncheck ./ddtrace/... >> ddtrace_results.txt
#          if [ $(cat ddtrace_results.txt | grep "Vulnerability #" | wc -l) -gt 0 ]; then
#            echo "Found ${num} vulnerabilities"
#            echo $(cat ddtrace_results.txt | grep "Vulnerability #")
#            exit 1
#          fi
#      - name: Run govulncheck in appsec
#        if: always()
#        run: |
#          govulncheck ./ddtrace/... >> ddtrace_results.txt
#          if [ $(cat ddtrace_results.txt | grep "Vulnerability #" | wc -l) -gt 0 ]; then
#            echo "Found ${num} vulnerabilities"
#            echo $(cat ddtrace_results.txt | grep "Vulnerability #")
#            exit 1
#          fi




