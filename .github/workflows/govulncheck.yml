name: Nightly govulncheck
on:
  push:
    branches:
      - 'shevchenko/govulncheck'
#on:
#  push:
#    branches:
#      - main
#  schedule:
#    - cron: '00 00 * * *'
jobs:
  govulncheck-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'DataDog/dd-trace-go'
      - name: Checkout Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Install govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Comment results
        id: govulncheck
        run: |
          num=$(govulncheck ./ddtrace/... | grep "Vulnerability #" | wc -l)
          v=$(govulncheck ./ddtrace/... | grep -Eo '\w+-\d+-\d+' | uniq | tr '\n' ',')
          if [ $num -gt 0 ]; then
            echo "Found ${num} vulnerabilities"
            echo "$(govulncheck ./ddtrace/... | grep -Eo '\w+-\d+-\d+' | uniq | tr '\n' ',')" >> $GITHUB_STEP_SUMMARY
            echo 'VULNERABILITIES<<EOF' >> $GITHUB_ENV
            echo "$(govulncheck ./ddtrace/... | grep -Eo '\w+-\d+-\d+' | uniq | tr '\n' ',')" >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV
            echo "VULNERABILITIES_1=green" >> $GITHUB_OUTPUT
            echo "VULNERABILITIES=green" >> $GITHUB_OUTPUT
            echo "VULNERABILITIES_3=$(govulncheck ./ddtrace/... | grep -Eo '\w+-\d+-\d+' | uniq | tr '\n' ',')" >> $GITHUB_OUTPUT
            echo "VULNERABILITIES_4=$(echo "VULNERABILITIES_4")" >> $GITHUB_OUTPUT
          fi
      - name: testing the GH_summary
        run: |
          echo ${{join(steps.govulncheck.outputs.*, '\n')}} >> $GITHUB_STEP_SUMMARY
      - name: testing the GH_env
        if: always()
        run: |
          echo "VULNERABILITIES_1 is ${{ steps.govulncheck.outputs.VULNERABILITIES }}"
          echo "VULNERABILITIES_1 is ${{ steps.govulncheck.outputs.VULNERABILITIES_1 }}"
          echo "VULNERABILITIES_2 is ${{ steps.govulncheck.outputs.VULNERABILITIES }}"
          echo "VULNERABILITIES_2 is ${{ steps.govulncheck.outputs.VULNERABILITIES_1 }}"
          echo "VULNERABILITIES_3 is ${{ steps.govulncheck.outputs.VULNERABILITIES_3 }}"
          echo "VULNERABILITIES_4 is ${{ steps.govulncheck.outputs.VULNERABILITIES_3 }}"
      - name: Set the value
        id: step_one
        run: |
          echo "VULN=$(govulncheck ./ddtrace/... | grep -Eo '\w+-\d+-\d+' | uniq | tr '\n' ','))" >> $GITHUB_ENV
      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.VULN }}"
          echo "is ${{ steps.step_one.VULN }}"

      - name: Use the value
        id: step_three
        run: |
          echo "${{ env.action_state }}"
