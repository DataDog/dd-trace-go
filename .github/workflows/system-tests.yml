name: System Tests

on:
  workflow_call: # allows to reuse this workflow
    inputs:
      branch_ref:
        description: 'The branch to run the workflow on'
        required: true
        type: string
  push:
    branches:
      - main
      - release-v*
      - flavien/service-extension-dev-ci #todo remove
    tags-ignore:
      - 'contrib/**'
      - 'instrumentation/**'
  pull_request:
    branches:
      - "**"
  merge_group:
  workflow_dispatch:
      inputs:
          ref:
              description: 'System Tests ref/tag/branch'
              required: true
              default: main
              type: string
  schedule:
    - cron:  '00 04 * * 2-6'

permissions:
  contents: read

jobs:
  system-tests:
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'DataDog/dd-trace-go')
    # Note: Not using large runners because the jobs spawned by this pipeline
    # don't seem to get a noticable speedup from using larger runners.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        weblog-variant:
          - net-http
          - echo
          - chi
          - gin
          - uds-echo
        scenario:
          - DEFAULT
          - INTEGRATIONS
          - CROSSED_TRACING_LIBRARIES
          - APPSEC_DISABLED
          - APPSEC_BLOCKING
          - APPSEC_BLOCKING_FULL_DENYLIST
          - APPSEC_REQUEST_BLOCKING
          - APPSEC_API_SECURITY
          - APPSEC_RASP
          - APPSEC_RUNTIME_ACTIVATION
          - APM_TRACING_E2E_SINGLE_SPAN
          - APM_TRACING_E2E_OTEL
          - TRACING_CONFIG_SCENARIOS
        include:
          - weblog-variant: net-http
            scenario: REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES
          - weblog-variant: net-http
            scenario: REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING
          - weblog-variant: net-http
            scenario: REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD
          # AppSec scenarios that don't depend on the integrations, so we just run on the net/http variant
          - weblog-variant: net-http
            scenario: APPSEC_RATE_LIMITER
          - weblog-variant: net-http
            scenario: APPSEC_CUSTOM_RULES
          - weblog-variant: net-http
            scenario: APPSEC_MISSING_RULES
          - weblog-variant: net-http
            scenario: APPSEC_CORRUPTED_RULES
          - weblog-variant: net-http
            scenario: APPSEC_LOW_WAF_TIMEOUT
          - weblog-variant: net-http
            scenario: APPSEC_STANDALONE
          - weblog-variant: net-http
            scenario: APPSEC_STANDALONE_V2
          - weblog-variant: net-http
            scenario: APPSEC_META_STRUCT_DISABLED
          - weblog-variant: net-http
            scenario: APPSEC_CUSTOM_OBFUSCATION
          - weblog-variant: net-http
            scenario: APPSEC_WAF_TELEMETRY
          # APM scenarios requiring specific environment settings
          - scenario: APM_TRACING_E2E_SINGLE_SPAN
            env:
              DD_API_KEY=$SYSTEM_TESTS_E2E_DD_API_KEY
              DD_APPLICATION_KEY=$SYSTEM_TESTS_E2E_DD_APP_KEY
              DD_SITE="datadoghq.com"
          - scenario: APM_TRACING_E2E_OTEL
            env:
              DD_API_KEY=$SYSTEM_TESTS_E2E_DD_API_KEY
              DD_APPLICATION_KEY=$SYSTEM_TESTS_E2E_DD_APP_KEY
              DD_SITE="datadoghq.com"
          # GraphQL System Tests
          - scenario: GRAPHQL_APPSEC
            weblog-variant: graph-gophers
          - scenario: GRAPHQL_APPSEC
            weblog-variant: graphql-go
          - scenario: GRAPHQL_APPSEC
            weblog-variant: gqlgen
          # Telemetry
          - weblog-variant: net-http
            scenario: TELEMETRY_APP_STARTED_PRODUCTS_DISABLED
          - weblog-variant: net-http
            scenario: TELEMETRY_LOG_GENERATION_DISABLED
          - weblog-variant: net-http
            scenario: TELEMETRY_METRIC_GENERATION_ENABLED
          - weblog-variant: net-http
            scenario: TELEMETRY_METRIC_GENERATION_DISABLED
      fail-fast: false
    env:
      TEST_LIBRARY: golang
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      SYSTEM_TESTS_E2E_DD_API_KEY: ${{ secrets.SYSTEM_TESTS_E2E_DD_API_KEY }}
      SYSTEM_TESTS_E2E_DD_APP_KEY: ${{ secrets.SYSTEM_TESTS_E2E_DD_APP_KEY }}
    name: Test (${{ matrix.weblog-variant }}, ${{ matrix.scenario }})
    steps:
      - name: Checkout system tests
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: 'DataDog/system-tests'
          ref: refs/heads/dario.castane/AIT-3705/dd-trace-go.v2

      - name: Checkout dd-trace-go
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          ref: ${{ inputs.branch_ref || github.ref }}
          path: 'binaries/dd-trace-go'

      - name: Build weblog
        run: ./build.sh -i weblog

      - name: Build runner
        uses: ./.github/actions/install_runner

      - name: Build agent
        run: ./build.sh -i agent

      - name: Run
        run: env ${{ matrix.env }} ./run.sh ${{ matrix.scenario }}

      - name: Compress artifact
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.weblog-variant }}_${{ matrix.scenario }}
          path: artifact.tar.gz

  build-external-processing-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dd-trace-go
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          ref: ${{ inputs.branch_ref || github.ref }}

      - name: Build service-extensions image locally
        run: |
          docker build -f ./contrib/envoyproxy/go-control-plane/cmd/serviceextensions/Dockerfile \
            -t local/service-extensions-callout:dev .

      - name: Save image to tar file
        run: |
          docker save local/service-extensions-callout:dev -o service-extensions-image.tar

      - name: Create binaries file
        run: |
          mkdir -p binaries
          echo "local/service-extensions-callout:dev" > binaries/golang-service-extensions-callout-image

      - name: Upload image and binaries artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: service-extensions-artifacts
          path: |
            service-extensions-image.tar
            binaries/golang-service-extensions-callout-image
          retention-days: 1

  system-tests-external-processing:
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'DataDog/dd-trace-go')
    # Note: Not using large runners because the jobs spawned by this pipeline
    # don't seem to get a noticable speedup from using larger runners.
    runs-on: ubuntu-latest
    needs: build-external-processing-image
    strategy:
      matrix:
        scenario:
          - EXTERNAL_PROCESSING
          - EXTERNAL_PROCESSING_BLOCKING
      fail-fast: false
    name: Test (External Processing, ${{ matrix.scenario }})
    steps:
      - name: Download service-extensions artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: service-extensions-artifacts
          path: .

      - name: Load service-extensions image
        run: |
          if [ -f service-extensions-image.tar ]; then
            docker load -i service-extensions-image.tar
          fi

      - name: Checkout system tests
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: 'DataDog/system-tests'
          ref: refs/heads/dario.castane/AIT-3705/dd-trace-go.v2

      - name: Checkout dd-trace-go
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          ref: ${{ inputs.branch_ref || github.ref }}
          path: 'binaries/dd-trace-go'

      - name: Build runner
        uses: ./.github/actions/install_runner

      - name: Build agent
        run: ./build.sh -i agent

      - name: Run
        run: ./run.sh ${{ matrix.scenario }}

      - name: Compress artifact
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ always() }}
        with:
          name: logs_external_processing_${{ matrix.scenario }}
          path: artifact.tar.gz

  system-tests-done:
    name: System Tests
    needs:
      - system-tests
      - system-tests-external-processing
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - name: Success
        if: needs.system-tests.result == 'success' && needs.system-tests-external-processing.result == 'success'
        run: echo "Success!"
      - name: Failure
        if: needs.system-tests.result != 'success' || needs.system-tests-external-processing.result != 'success'
        run: echo "Failure!" && exit 1
