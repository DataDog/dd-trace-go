name: AppSec Tests
on:
  workflow_dispatch: # manually
  schedule: # nightly
    - cron: "0 0 * * *"
  pull_request: # on pull requests touching appsec files
    paths:
      - 'internal/appsec/**'
      - 'appsec/**'
      - 'contrib/**/appsec.go'
env:
  DD_APPSEC_WAF_TIMEOUT: 5s
  GODEBUG: cgocheck=2
jobs:
  native:
    strategy:
      matrix:
        runs-on: [ macos-latest, ubuntu-latest, windows-latest ]
        go-version: [ 1.18, 1.17, 1.16 ]
        cgo_enabled: # test it compiles with and without cgo
          - 0
          - 1
        build_tags: # test it compiles with and without the appsec build tag
          - ""
          - "appsec"
        appsec_enabled: # test it compiles with and without appsec enabled
          - true
          - false
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - run: >
          env CGO_ENABLED=${{ matrix.cgo_enabled }} DD_APPSEC_ENABLED=${{ matrix.appsec_enabled }}
          go test -v ${{ matrix.build_tags != '' && format('-tags="{0}"', matrix.build_tags) || ''}}
          ./appsec/...
          ./internal/appsec/...
          ./contrib/google.golang.org/grpc/...
          ./contrib/net/http/...
          ./contrib/gorilla/mux/...
          ./contrib/go-chi/...
          ./contrib/labstack/echo.v4/...
          ./contrib/gin-gonic/gin/...

  # Same tests but on the official golang container for linux
  golang-linux-container:
    strategy:
      matrix:
        go-version: [ 1.18, 1.17, 1.16 ]
        distribution: [ bullseye, buster, alpine ]
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: golang:${{ matrix.go-version }}-${{ matrix.distribution }}
    steps:
      - uses: actions/checkout@v3
      # Install gcc and the libc headers on alpine images
      - if: ${{ matrix.distribution == 'alpine' }}
        run: apk add gcc musl-dev libc6-compat git
      - run: >
          env CGO_ENABLED=${{ matrix.cgo_enabled }} DD_APPSEC_ENABLED=${{ matrix.appsec_enabled }}
          go test -v ${{ matrix.build_tags != '' && format('-tags="{0}"', matrix.build_tags) || ''}}
          ./appsec/...
          ./internal/appsec/...
          ./contrib/google.golang.org/grpc/...
          ./contrib/net/http/...
          ./contrib/gorilla/mux/...
          ./contrib/go-chi/...
          ./contrib/labstack/echo.v4/...
          ./contrib/gin-gonic/gin/...
