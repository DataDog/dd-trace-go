name: Docker image Build and Push

on:
  workflow_call:
    inputs:
      image:
        description: 'Docker image name'
        required: true
        type: string
      dockerfile:
        description: 'Path to the Dockerfile'
        required: true
        type: string
      artifact_prefix:
        description: 'Prefix for the artifact name'
        required: true
        type: string
      commit_sha:
        description: 'Commit SHA to checkout'
        required: true
        type: string
      tags:
        description: 'Space-separated list of tags to apply to the image (e.g., "latest v2.0.0")'
        required: true
        type: string
      push:
        description: 'Push image to ghcr.io'
        required: false
        type: boolean
        default: true
      platforms:
        description: 'A JSON array of platforms to build for.'
        required: false
        type: string
        default: '["linux/amd64", "linux/arm64"]'
      version:
        description: 'DD_VERSION to pass as build argument to Dockerfile'
        required: false
        type: string
        default: ''

jobs:
  build-images:
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    strategy:
      matrix:
        platform: ${{ fromJSON(inputs.platforms) }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.commit_sha }}

      - name: Install Docker (only arm64)
        if: matrix.platform == 'linux/arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          newgrp docker
          sudo chmod 666 /var/run/docker.sock

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker
        shell: bash
        run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ inputs.image }}

      - name: Build and push by digest
        id: build
        if: inputs.push == true
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DD_VERSION=${{ inputs.version }}
            COMMIT_SHA=${{ inputs.commit_sha }}
          # This builds a Docker image and uploads it using a unique fingerprint, without a name
          outputs: type=image,name=${{ inputs.image }},push-by-digest=true,name-canonical=true,push=true

      - name: Generate tags
        if: inputs.push == false
        id: tags
        run: |
          TAGS=""
          for tag in ${{ inputs.tags }}; do
            if [ -n "$tag" ]; then
              TAGS="$TAGS,${{ inputs.image }}:$tag"
            fi
          done
          echo "list=${TAGS:1}" >> $GITHUB_OUTPUT

      - name: Build and export
        id: build-export
        if: inputs.push == false
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.tags.outputs.list }}
          build-args: |
            DD_VERSION=${{ inputs.version }}
            COMMIT_SHA=${{ inputs.commit_sha }}
          outputs: type=docker,dest=/tmp/${{ inputs.artifact_prefix }}-${{ env.PLATFORM_PAIR }}.tar
          push: false

      - name: Export digest
        if: inputs.push == true
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: inputs.push == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digests-${{ inputs.artifact_prefix }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Upload image artifact
        if: inputs.push == false
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.artifact_prefix }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/${{ inputs.artifact_prefix }}-${{ env.PLATFORM_PAIR }}.tar
          if-no-files-found: error
          retention-days: 1

  publish-images:
    if: inputs.push == true
    runs-on: ubuntu-latest
    needs: [build-images]
    steps:
      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/digests
          pattern: digests-${{ inputs.artifact_prefix }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker
        shell: bash
        run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          TAG_FLAGS=""
          for tag in ${{ inputs.tags }}; do
            if [ -n "$tag" ]; then
              TAG_FLAGS="$TAG_FLAGS -t ${{ inputs.image }}:$tag"
            fi
          done
          docker buildx imagetools create $TAG_FLAGS \
            $(printf '${{ inputs.image }}@sha256:%s ' *) 