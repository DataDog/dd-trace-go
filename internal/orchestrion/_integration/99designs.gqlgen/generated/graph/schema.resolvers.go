// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2023-present Datadog, Inc.

package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/DataDog/dd-trace-go/internal/orchestrion/_integration/99designs.gqlgen/generated/graph/model"
)

// TopLevel is the resolver for the topLevel field.
func (r *queryResolver) TopLevel(ctx context.Context, id string) (*model.TopLevel, error) {
	return &model.TopLevel{Nested: id}, nil
}

// Nested is the resolver for the nested field.
func (r *topLevelResolver) Nested(ctx context.Context, obj *model.TopLevel, id string) (string, error) {
	return fmt.Sprintf("%s/%s", obj.Nested, id), nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// TopLevel returns TopLevelResolver implementation.
func (r *Resolver) TopLevel() TopLevelResolver { return &topLevelResolver{r} }

type queryResolver struct{ *Resolver }
type topLevelResolver struct{ *Resolver }
