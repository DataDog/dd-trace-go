# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2025 Datadog, Inc.
---
# yaml-language-server: $schema=https://datadoghq.dev/orchestrion/schema.json
meta:
  name: error-tracking
  description: The entry point of a Go program with error tracking.

aspects:
  - id: Error Tracking
    join-point:
      all-of:
        - package-name: internal
        - function-body:
            function:
              - signature-contains:
                  args: [context.Context]
                  returns: [error]
    advice:
      - prepend-statements:
          imports:
            tracer: github.com/DataDog/dd-trace-go/v2/ddtrace/tracer
            errortrace: github.com/DataDog/dd-trace-go/v2/instrumentation/errortrace
          template: |-
            {{ $ctx := .Function.ArgumentOfType "context.Context" -}}
            {{- if (eq $ctx "") -}}
              {{- $ctx = "ctx" -}}
              ctx := context.TODO()
            {{ end -}}
            var span *tracer.Span
            span, {{ $ctx }} = tracer.StartSpanFromContext({{ $ctx }}, {{ printf "%q" .Function.Name }},
              tracer.Tag("function-name", {{ printf "%q" .Function.Name }}),
            )
            {{ $ret := .Function.LastResultThatImplements "error" }}
            {{ with $ret }}
              defer func() {
                {{ $ret }} = errortrace.Wrap({{ $ret }})
                span.Finish(tracer.WithError({{ $ret }}))
              }()
            {{ else -}}
              defer span.Finish()
            {{- end -}}