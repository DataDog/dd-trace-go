// Code generated by protoc-gen-go. DO NOT EDIT.
// source: binarycarrier.proto

package binarycarrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BasicTracerCarrier struct {
	TraceId              uint64            `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId               uint64            `protobuf:"varint,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	HasPriority          bool              `protobuf:"varint,3,opt,name=has_priority,json=hasPriority,proto3" json:"has_priority,omitempty"`
	SamplingPriority     int32             `protobuf:"varint,4,opt,name=sampling_priority,json=samplingPriority,proto3" json:"sampling_priority,omitempty"`
	BaggageItems         map[string]string `protobuf:"bytes,5,rep,name=baggage_items,json=baggageItems,proto3" json:"baggage_items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BasicTracerCarrier) Reset()         { *m = BasicTracerCarrier{} }
func (m *BasicTracerCarrier) String() string { return proto.CompactTextString(m) }
func (*BasicTracerCarrier) ProtoMessage()    {}
func (*BasicTracerCarrier) Descriptor() ([]byte, []int) {
	return fileDescriptor_binarycarrier_98436d34d17616e5, []int{0}
}
func (m *BasicTracerCarrier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicTracerCarrier.Unmarshal(m, b)
}
func (m *BasicTracerCarrier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicTracerCarrier.Marshal(b, m, deterministic)
}
func (dst *BasicTracerCarrier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicTracerCarrier.Merge(dst, src)
}
func (m *BasicTracerCarrier) XXX_Size() int {
	return xxx_messageInfo_BasicTracerCarrier.Size(m)
}
func (m *BasicTracerCarrier) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicTracerCarrier.DiscardUnknown(m)
}

var xxx_messageInfo_BasicTracerCarrier proto.InternalMessageInfo

func (m *BasicTracerCarrier) GetTraceId() uint64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *BasicTracerCarrier) GetSpanId() uint64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *BasicTracerCarrier) GetHasPriority() bool {
	if m != nil {
		return m.HasPriority
	}
	return false
}

func (m *BasicTracerCarrier) GetSamplingPriority() int32 {
	if m != nil {
		return m.SamplingPriority
	}
	return 0
}

func (m *BasicTracerCarrier) GetBaggageItems() map[string]string {
	if m != nil {
		return m.BaggageItems
	}
	return nil
}

func init() {
	proto.RegisterType((*BasicTracerCarrier)(nil), "binarycarrier.BasicTracerCarrier")
	proto.RegisterMapType((map[string]string)(nil), "binarycarrier.BasicTracerCarrier.BaggageItemsEntry")
}

func init() { proto.RegisterFile("binarycarrier.proto", fileDescriptor_binarycarrier_98436d34d17616e5) }

var fileDescriptor_binarycarrier_98436d34d17616e5 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x14, 0xc4, 0xd9, 0xa4, 0xe9, 0x9f, 0xd7, 0x16, 0xda, 0x55, 0x30, 0x7a, 0x8a, 0x9e, 0x02, 0x42,
	0x0e, 0xf6, 0x22, 0x5e, 0x84, 0x8a, 0x87, 0xdc, 0x64, 0xf1, 0xe0, 0x2d, 0xbc, 0x24, 0x4b, 0xba,
	0xd8, 0x26, 0xe1, 0xed, 0x2a, 0xe4, 0x73, 0xf9, 0x05, 0x65, 0x37, 0xfe, 0x69, 0xc9, 0x6d, 0xe7,
	0x37, 0x33, 0xb0, 0xf3, 0xe0, 0x2c, 0x57, 0x35, 0x52, 0x57, 0x20, 0x91, 0x92, 0x94, 0xb4, 0xd4,
	0x98, 0x86, 0x2f, 0x4f, 0xe0, 0xcd, 0x97, 0x07, 0x7c, 0x8b, 0x5a, 0x15, 0xaf, 0x84, 0x85, 0xa4,
	0xa7, 0x1e, 0xf3, 0x4b, 0x98, 0x1a, 0x0b, 0x32, 0x55, 0x86, 0x2c, 0x62, 0xf1, 0x48, 0x4c, 0x9c,
	0x4e, 0x4b, 0x7e, 0x01, 0x13, 0xdd, 0x62, 0x6d, 0x1d, 0xcf, 0x39, 0x63, 0x2b, 0xd3, 0x92, 0x5f,
	0xc3, 0x62, 0x87, 0x3a, 0x6b, 0x49, 0x35, 0xa4, 0x4c, 0x17, 0xfa, 0x11, 0x8b, 0xa7, 0x62, 0xbe,
	0x43, 0xfd, 0xf2, 0x83, 0xf8, 0x2d, 0xac, 0x35, 0x1e, 0xda, 0xbd, 0xaa, 0xab, 0xff, 0xdc, 0x28,
	0x62, 0x71, 0x20, 0x56, 0xbf, 0xc6, 0x5f, 0xf8, 0x0d, 0x96, 0x39, 0x56, 0x15, 0x56, 0x32, 0x53,
	0x46, 0x1e, 0x74, 0x18, 0x44, 0x7e, 0x3c, 0xbf, 0xdb, 0x24, 0xa7, 0xb3, 0x86, 0xbf, 0x4f, 0xb6,
	0x7d, 0x2d, 0xb5, 0xad, 0xe7, 0xda, 0x50, 0x27, 0x16, 0xf9, 0x11, 0xba, 0x7a, 0x84, 0xf5, 0x20,
	0xc2, 0x57, 0xe0, 0xbf, 0xcb, 0xce, 0xad, 0x9d, 0x09, 0xfb, 0xe4, 0xe7, 0x10, 0x7c, 0xe2, 0xfe,
	0x43, 0xba, 0x9d, 0x33, 0xd1, 0x8b, 0x07, 0xef, 0x9e, 0xe5, 0x63, 0x77, 0xcb, 0xcd, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf6, 0x4a, 0xfe, 0xff, 0x62, 0x01, 0x00, 0x00,
}
