
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: Will use the API"}
START
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: Merge X-Ray Traces is off, using trace context from Datadog only"}
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: Could not convert TraceContext to a SpanContext (most likely TraceContext was empty)"}
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: sending metric via log forwarder"}
{
  "e": XXXX,
  "m": "aws.lambda.enhanced.invocations",
  "t": [
    "functionname:integration-tests-go-XXXX-hello",
    "region:eu-west-1",
    "account_id:XXXX",
    "memorysize:128",
    "cold_start:true",
    "datadog_lambda:vX.X.X",
    "resource:integration-tests-go-XXXX-hello",
    "dd_lambda_layer:datadog-goX.X.X"
  ],
  "v": 1
}
Current span ID:XXXX
Current trace ID:XXXX
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: adding metric \"hello-go.dog\", with value 1.000000"}
{
  "traces": [
    [
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {}
    ]
  ]
}
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: posting to url https://api.datadoghq.com/api/v1/distribution_points"}
XXXX-XX-XX XX:XX:XX.XXX {"status":"debug","message":"datadog: Sending payload with body {\"series\":[{\"metric\":\"hello-go.dog\",\"tags\":[\"dd_lambda_layer:datadog-goX.X.X\"],\"type\":\"distribution\",\points\":[[XXXX,[1]]]}]}"}
END Duration: XXXX ms (init: XXXX ms) Memory Used: XXXX MB
