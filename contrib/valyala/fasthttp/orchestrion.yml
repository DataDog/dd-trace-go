# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2023-present Datadog, Inc.
---
# yaml-language-server: $schema=https://datadoghq.dev/orchestrion/schema.json
meta:
  name: github.com/DataDog/dd-trace-go/contrib/valyala/fasthttp
  description: |-
    Package fasthttp provides a fast HTTP implementation for Go, with a focus on performance and low memory usage.

aspects:
  # FastHTTP Server instrumentation
  # All server startup methods (ListenAndServe, ServeTLS, etc.) eventually call Serve(ln)
  # By targeting only Serve(), we avoid hot-path overhead and ensure complete coverage
  - id: FastHTTPServerInstrumentation
    join-point:
      function-body:
        function:
          - receiver: '*github.com/valyala/fasthttp.Server'
          - name: 'Serve'  # Single entry point for all server startup methods
    advice:
      # Add instrumentation flag to prevent double-wrapping
      - add-struct-field:
          name: '__dd_instrumented'
          type: 'bool'
          
      - prepend-statements:
          imports:
            fasthttptrace: github.com/DataDog/dd-trace-go/contrib/valyala/fasthttp/v2
          template: |
            {{ $srv := .Function.Receiver }}
            // Only wrap Handler once, even if Serve() is called multiple times
            if !{{ $srv }}.__dd_instrumented && {{ $srv }}.Handler != nil {
              {{ $srv }}.Handler = fasthttptrace.WrapHandler({{ $srv }}.Handler)
              {{ $srv }}.__dd_instrumented = true
            }
