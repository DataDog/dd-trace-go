// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2025 Datadog, Inc.

package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"

	"github.com/vektah/gqlparser/v2/gqlerror"
)

// WithError is the resolver for the withError field.
func (r *queryResolver) WithError(ctx context.Context) (*string, error) {
	return nil, &gqlerror.Error{
		Message: "test error",
		Extensions: map[string]any{
			"int":                          1,
			"float":                        1.1,
			"str":                          "1",
			"bool":                         true,
			"slice":                        []string{"1", "2"},
			"unsupported_type_stringified": []any{1, "foo"},
			"not_captured":                 "nope",
		},
	}
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
