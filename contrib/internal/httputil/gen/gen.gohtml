// Code generated by ./gen/gen.go DO NOT EDIT

package httputil

import (
	"net/http"
	"gopkg.in/DataDog/dd-trace-go.v1/ddtrace"
)

// wrapResponseWriter wraps an underlying http.ResponseWriter so that it can
// trace the http response codes. It also checks for various http interfaces
// (Flusher, Pusher, CloseNotifier, Hijacker) and if the underlying
// http.ResponseWriter implements them it generates an unnamed struct with the
// appropriate fields.
//
// This code is generated because we have to account for all the permutations
// of the interfaces.
func wrapResponseWriter(w http.ResponseWriter, span ddtrace.Span) http.ResponseWriter {
{{- range .Interfaces }}
	h{{.}}, ok{{.}} := w.(http.{{.}})
{{- end }}

	w = newResponseWriter(w, span)
	switch {
{{- range .Combinations }}
{{- range . }}
	case {{ range $i, $v := . }}{{ if gt $i 0 }} && {{ end }}ok{{.}}{{ end }}:
		w = struct {
			http.ResponseWriter
{{- range . }}
            http.{{.}}
{{- end }}
		} { w{{ range . }}, h{{.}}{{ end }} }
{{- end }}
{{- end }}
	}

	return w
}
